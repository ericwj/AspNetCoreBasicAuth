<Project ToolsVersion="15.0">
	<Target Name="SetSourceVersion" BeforeTargets="CoreCompile">
		<!-- Source Version / Commit Hash (e.g. 31a3144fbb9a27411a01449d7047dd7a833d45f9)-->
		<Exec Command="git rev-parse --verify HEAD"
					Condition="'$(Build_SourceVersion)' == ''"
					ConsoleToMSBuild="true" IgnoreExitCode="true"
					StandardErrorImportance="high" StandardOutputImportance="low">
			<Output TaskParameter="ConsoleOutput" PropertyName="Build_SourceVersion" />
			<Output TaskParameter="ExitCode" PropertyName="GitRevParseVerifyHeadExitCode"/>
		</Exec>
		<CreateProperty Value="None" Condition="'$(GitRevParseVerifyHeadExitCode)' != '0'">
			<Output TaskParameter="Value" PropertyName="Build_SourceVersion"/>
		</CreateProperty>
		<!-- Source Branch Name (e.g. master)-->
		<Exec Command="git rev-parse --abbrev-ref HEAD"
					Condition="'$(Build_SourceBranchName)' == ''"
					ConsoleToMSBuild="true" IgnoreExitCode="true"
					StandardErrorImportance="high" StandardOutputImportance="low">
			<Output TaskParameter="ConsoleOutput" PropertyName="Build_SourceBranchName" />
			<Output TaskParameter="ExitCode" PropertyName="GitRevParseAbbrevRefHeadExitCode"/>
		</Exec>
		<CreateProperty Value="None" Condition="'$(GitRevParseAbbrevRefHeadExitCode)' != '0'">
			<Output TaskParameter="Value" PropertyName="Build_SourceBranchName"/>
		</CreateProperty>
		
		<MakeDir
			Directories="$(MSBuildProjectDirectory)\Properties"
			Condition="!Exists('$(MSBuildProjectDirectory)\Properties')"/>
		<ReadLinesFromFile
			File="$(MSBuildProjectDirectory)\Properties\AssemblyInfo.Version.cs">
			<Output TaskParameter="Lines" PropertyName="AssemblyInfoVersionFromDisk"/>
		</ReadLinesFromFile>
		<CreateProperty Value="//------------------------------------------------------------------------------;
		// %3Cauto-generated%3E;
		//     This code was generated by a tool.;
		//;
		//     Changes to this file may cause incorrect behavior and will be lost if;
		//     the code is regenerated.;
		// %3C/auto-generated%3E;
		//------------------------------------------------------------------------------;
		using System.Reflection%3B;
		;
		[assembly: AssemblyMetadata(%22Build%22, %22$(Build_DefinitionName)%22)];
		[assembly: AssemblyMetadata(%22BuildId%22, %22$(Build_BuildId)%22)];
		[assembly: AssemblyMetadata(%22Branch%22, %22$(Build_SourceBranchName)%22)];
		[assembly: AssemblyMetadata(%22Commit%22, %22$(Build_SourceVersion)%22)];
		[assembly: AssemblyMetadata(%22BuiltBy%22, %22$(Agent_Name)%22)];
		[assembly: AssemblyMetadata(%22BuiltFor%22, %22$(Build_QueuedBy)%22)];">
			<Output TaskParameter="Value" PropertyName="AssemblyInfoVersionGenerated"/>
		</CreateProperty>
		<WriteLinesToFile
			Condition="'$(AssemblyInfoVersionFromDisk)' != '$(AssemblyInfoVersionGenerated)'"
			File="$(MSBuildProjectDirectory)\Properties\AssemblyInfo.Version.cs"
			Encoding="utf-8"
			Lines="$(AssemblyInfoVersionGenerated)"
			Overwrite="true"/>
		<Message Importance="normal" Text="SetSourceVersion: Build_SourceBranchName=$(Build_SourceBranchName)"/>
		<Message Importance="normal" Text="SetSourceVersion: Build_SourceVersion=$(Build_SourceVersion)"/>
		<Message Importance="normal" Text="SetSourceVersion: Description=$(Description)"/>
	</Target>
	<Target Name="ShowVersion" AfterTargets="Build">
		<Message Importance="high" Text="$(Configuration)|$(Platform) $(TargetFramework) Version $(Version) Commit $(Build_SourceBranchName)@$(Build_SourceVersion) Build=$(Build_DefinitionName) #$(Build_BuildId)"/>
		<Message Importance="normal" Text="Version Prefix: $(VersionPrefix); Version Suffix: $(VersionSuffix); Description: $(Description)"/>
	</Target>
</Project>